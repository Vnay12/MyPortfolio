/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 without_draco.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, OrthographicCamera } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { scene } = useGLTF('/models/without_draco.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <directionalLight intensity={0.7} decay={2} rotation={[1.203, 0.512, -1.385]} scale={0.01} target={nodes.Directional_Light.target}>
        <primitive object={nodes.Directional_Light.target} position={[0, 0, -1]} />
      </directionalLight>
      <OrthographicCamera makeDefault={false} far={100000} near={0} position={[-36.629, 23.8, 36.782]} rotation={[-0.539, -0.715, -0.374]} scale={0.01} />
      <OrthographicCamera makeDefault={false} far={100000} near={0} position={[-32.001, 24.967, 40.764]} rotation={[-0.539, -0.715, -0.374]} scale={0.01} />
      <mesh geometry={nodes.Cylinder_3.geometry} material={nodes.Cylinder_3.material} position={[-0.311, -1.597, 1.029]} rotation={[-0.016, -0.351, 0.311]} scale={[-0.014, 0.014, 0.014]} />
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[0.354, 4.771, -1.227]} rotation={[2.915, -1.192, 0.868]} scale={0.007} />
      <instancedMesh args={[nodes.mesh_1.geometry, nodes.mesh_1.material, 10]} instanceMatrix={nodes.mesh_1.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_2.geometry, nodes.mesh_2.material, 2]} instanceMatrix={nodes.mesh_2.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_3.geometry, nodes.mesh_3.material, 2]} instanceMatrix={nodes.mesh_3.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_4.geometry, nodes.mesh_4.material, 2]} instanceMatrix={nodes.mesh_4.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_5.geometry, nodes.mesh_5.material, 2]} instanceMatrix={nodes.mesh_5.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_6.geometry, nodes.mesh_6.material, 2]} instanceMatrix={nodes.mesh_6.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_7.geometry, nodes.mesh_7.material, 2]} instanceMatrix={nodes.mesh_7.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_8.geometry, nodes.mesh_8.material, 2]} instanceMatrix={nodes.mesh_8.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_9.geometry, nodes.mesh_9.material, 2]} instanceMatrix={nodes.mesh_9.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_11.geometry, nodes.mesh_11.material, 2]} instanceMatrix={nodes.mesh_11.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_12.geometry, nodes.mesh_12.material, 2]} instanceMatrix={nodes.mesh_12.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_13.geometry, nodes.mesh_13.material, 2]} instanceMatrix={nodes.mesh_13.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_14.geometry, nodes.mesh_14.material, 2]} instanceMatrix={nodes.mesh_14.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_15.geometry, nodes.mesh_15.material, 2]} instanceMatrix={nodes.mesh_15.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_16.geometry, nodes.mesh_16.material, 2]} instanceMatrix={nodes.mesh_16.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_17.geometry, nodes.mesh_17.material, 3]} instanceMatrix={nodes.mesh_17.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_18.geometry, nodes.mesh_18.material, 2]} instanceMatrix={nodes.mesh_18.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_19.geometry, nodes.mesh_19.material, 3]} instanceMatrix={nodes.mesh_19.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_20.geometry, nodes.mesh_20.material, 4]} instanceMatrix={nodes.mesh_20.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_21.geometry, nodes.mesh_21.material, 2]} instanceMatrix={nodes.mesh_21.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_22.geometry, nodes.mesh_22.material, 2]} instanceMatrix={nodes.mesh_22.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_23.geometry, nodes.mesh_23.material, 2]} instanceMatrix={nodes.mesh_23.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_24.geometry, nodes.mesh_24.material, 2]} instanceMatrix={nodes.mesh_24.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_25.geometry, nodes.mesh_25.material, 2]} instanceMatrix={nodes.mesh_25.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_26.geometry, nodes.mesh_26.material, 2]} instanceMatrix={nodes.mesh_26.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_27.geometry, nodes.mesh_27.material, 3]} instanceMatrix={nodes.mesh_27.instanceMatrix} />
      <instancedMesh args={[nodes.mesh_28.geometry, nodes.mesh_28.material, 4]} instanceMatrix={nodes.mesh_28.instanceMatrix} />
    </group>
  )
}

useGLTF.preload('/moedls/without_draco.glb')
